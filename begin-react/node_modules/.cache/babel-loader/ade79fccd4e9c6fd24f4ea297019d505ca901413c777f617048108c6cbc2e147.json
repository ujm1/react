{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\App2.js\";\nimport React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport UserList from \"./UserList2\";\nimport CreateUser from \"./CreateUser\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction countActiveUsers(users) {\n  console.log('활성사용자 수를 세는중...');\n  return users.filter(user => user.active) /* active인 user만 다시 */.length; /* 그리고 그 개수를 구함 */\n}\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\",\n    active: false\n  }]\n};\nfunction App2() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n  }, void 0, true);\n}\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","UserList","CreateUser","jsxDEV","_jsxDEV","Fragment","_Fragment","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","App2","children","fileName","_jsxFileName","lineNumber","columnNumber","count","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/App2.js"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport UserList from \"./UserList2\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nfunction countActiveUsers(users) {\r\n  console.log('활성사용자 수를 세는중...');\r\n  return users.filter(user=>user.active) /* active인 user만 다시 */\r\n  .length; /* 그리고 그 개수를 구함 */\r\n}\r\n\r\nconst initialState={\r\n  inputs:{\r\n    username:'', email:''\r\n  },\r\n  users: [\r\n    {\r\n      id: 1,\r\n      username: \"velopert\",\r\n      email: \"public.velopert@gmail.com\",\r\n      active:true\r\n    },\r\n    {\r\n      id: 2,\r\n      username: \"tester\",\r\n      email: \"tester@example.com\",\r\n      active:false\r\n    },\r\n    {\r\n      id: 3,\r\n      username: \"liz\",\r\n      email: \"liz@example.com\",\r\n      active:false\r\n    }\r\n  ]\r\n};\r\n\r\nfunction App2() {\r\n\r\n  return (\r\n    <>\r\n      <CreateUser\r\n      />\r\n      <UserList users={[]} />\r\n      활성사용자 수 : {count}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App2;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAErE,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9B,OAAOF,KAAK,CAACG,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,MAAM,CAAC,CAAC,uBACtCC,MAAM,CAAC,CAAC;AACX;AAEA,MAAMC,YAAY,GAAC;EACjBC,MAAM,EAAC;IACLC,QAAQ,EAAC,EAAE;IAAEC,KAAK,EAAC;EACrB,CAAC;EACDV,KAAK,EAAE,CACL;IACEW,EAAE,EAAE,CAAC;IACLF,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,2BAA2B;IAClCL,MAAM,EAAC;EACT,CAAC,EACD;IACEM,EAAE,EAAE,CAAC;IACLF,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE,oBAAoB;IAC3BL,MAAM,EAAC;EACT,CAAC,EACD;IACEM,EAAE,EAAE,CAAC;IACLF,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,iBAAiB;IACxBL,MAAM,EAAC;EACT,CAAC;AAEL,CAAC;AAED,SAASO,IAAIA,CAAA,EAAG;EAEd,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACF,UAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACFrB,OAAA,CAACH,QAAQ;MAACO,KAAK,EAAE;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,4CACb,EAACC,KAAK;EAAA,eAChB,CAAC;AAEP;AAACC,EAAA,GAVQP,IAAI;AAYb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}