{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\UserList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction User({\n  user\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = User;\nfunction UserList() {\n  const users = [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@gmail.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@gmail.com'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(User, {\n      user: users[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(User, {\n      user: users[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true);\n}\n_c2 = UserList;\nexport { UserList };\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","User","user","children","username","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","UserList","users","id","map","_c2","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/UserList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction User({user}) {\r\n    return (\r\n        <>\r\n            <div>\r\n                <b>{user.username}</b> <span>({user.email})</span>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction UserList() {\r\n\r\n    const users=[\r\n        {\r\n            id:1, username:'velopert', email:'public.velopert@gmail.com'\r\n        },\r\n        {\r\n            id:2, username:'tester', email:'tester@gmail.com'\r\n        },\r\n        {\r\n            id:3, username:'liz', email:'liz@gmail.com'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n        <User user={users[0]}/> {/* 자동적으로 users 배열의 하나하나를 \r\n        (prop처럼) user로 인식해, user[0]하면 배열의 첫번째 객체를 인식하고, \r\n        그래서 user.username 같은것들이 먹는 것 */}\r\n        <User user={users[1]}/>\r\n        {/* 이렇게 해도 되지만 번거로우므로.. map을 사용하면 */}\r\n        <br></br>\r\n        {users.map(user=>(<User user={user} key={user.id}/>))}\r\n        {/* 배열에 map 먹여서 안의 user 하나하나를 저 함수에 먹이는 셈 */}\r\n        {/* 배열은 고유 key 값을 넣어주는 것이 좋다. */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport {UserList};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,IAAIA,CAAC;EAACC;AAAI,CAAC,EAAE;EAClB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAAK,QAAA,EAAID,IAAI,CAACE;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eAAAV,OAAA;QAAAK,QAAA,GAAM,GAAC,EAACD,IAAI,CAACO,KAAK,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD;EAAC,gBACR,CAAC;AAEX;AAACE,EAAA,GATQT,IAAI;AAWb,SAASU,QAAQA,CAAA,EAAG;EAEhB,MAAMC,KAAK,GAAC,CACR;IACIC,EAAE,EAAC,CAAC;IAAET,QAAQ,EAAC,UAAU;IAAEK,KAAK,EAAC;EACrC,CAAC,EACD;IACII,EAAE,EAAC,CAAC;IAAET,QAAQ,EAAC,QAAQ;IAAEK,KAAK,EAAC;EACnC,CAAC,EACD;IACII,EAAE,EAAC,CAAC;IAAET,QAAQ,EAAC,KAAK;IAAEK,KAAK,EAAC;EAChC,CAAC,CACJ;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACAL,OAAA,CAACG,IAAI;MAACC,IAAI,EAAEU,KAAK,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAAC,eAGxBV,OAAA,CAACG,IAAI;MAACC,IAAI,EAAEU,KAAK,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEvBV,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRI,KAAK,CAACE,GAAG,CAACZ,IAAI,iBAAGJ,OAAA,CAACG,IAAI;MAACC,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACW,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE,CAAC;EAAA,eAGnD,CAAC;AAGX;AAACO,GAAA,GA5BQJ,QAAQ;AA8BjB,SAAQA,QAAQ;AAAE,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}