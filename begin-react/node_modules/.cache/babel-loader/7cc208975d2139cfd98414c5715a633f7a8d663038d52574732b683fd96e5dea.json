{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\App2.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport UserList from \"./UserList2\";\nimport CreateUser from \"./CreateUser\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App2() {\n  _s();\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    email: \"\"\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  }; /* onChange라는 이벤트가 일어났을 때, \r\n     input의 name과 value를 타겟으로 잡고, input의 username과 email을 변경 */\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\"\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\"\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\"\n  }]);\n  const nextId = useRef(4);\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n    /* 또는 setUsers(users.concat(user)) */\n\n    setInputs({\n      username: \"\",\n      email: \"\"\n    });\n    nextId.current += 1;\n  };\n  const onRemove = id => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App2, \"c8CaWuDLNONYNuQ6Kvev2Ji6UQQ=\");\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useRef","useState","UserList","CreateUser","jsxDEV","_jsxDEV","Fragment","_Fragment","App2","_s","inputs","setInputs","username","email","onChange","e","name","value","target","users","setUsers","id","nextId","onCreate","user","current","onRemove","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/App2.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport UserList from \"./UserList2\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nfunction App2() {\r\n  const [inputs, setInputs] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const { username, email } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  }; /* onChange라는 이벤트가 일어났을 때, \r\n  input의 name과 value를 타겟으로 잡고, input의 username과 email을 변경 */\r\n\r\n  const [users, setUsers] = useState([\r\n    {\r\n      id: 1,\r\n      username: \"velopert\",\r\n      email: \"public.velopert@gmail.com\",\r\n    },\r\n    {\r\n      id: 2,\r\n      username: \"tester\",\r\n      email: \"tester@example.com\",\r\n    },\r\n    {\r\n      id: 3,\r\n      username: \"liz\",\r\n      email: \"liz@example.com\",\r\n    },\r\n  ]);\r\n\r\n  const nextId = useRef(4);\r\n\r\n  const onCreate = () => {\r\n    const user={\r\n      id:nextId.current,\r\n      username,\r\n      email\r\n    }\r\n    setUsers([...users,user]);\r\n    /* 또는 setUsers(users.concat(user)) */\r\n\r\n\r\n    setInputs({ username: \"\", email: \"\" });\r\n    nextId.current += 1;\r\n  };\r\n\r\n  const onRemove=id=>{\r\n    setUsers(users.filter(user=>user.id!==id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* 상태관리를 위에서 하고, 그 값만 prop 인자로 넣기 */}\r\n      <CreateUser\r\n        username={username}\r\n        email={email}\r\n        onChange={onChange}\r\n        onCreate={onCreate}\r\n      />\r\n      <UserList users={users} onRemove={onRemove} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE/C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM;IAAED,QAAQ;IAAEC;EAAM,CAAC,GAAGH,MAAM;EAElC,MAAMI,QAAQ,GAAIC,CAAC,IAAK;IACtB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACM,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL;;EAEE,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CACjC;IACEoB,EAAE,EAAE,CAAC;IACLT,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE;EACT,CAAC,EACD;IACEQ,EAAE,EAAE,CAAC;IACLT,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE;EACT,CAAC,EACD;IACEQ,EAAE,EAAE,CAAC;IACLT,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EAEF,MAAMS,MAAM,GAAGtB,MAAM,CAAC,CAAC,CAAC;EAExB,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,IAAI,GAAC;MACTH,EAAE,EAACC,MAAM,CAACG,OAAO;MACjBb,QAAQ;MACRC;IACF,CAAC;IACDO,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACK,IAAI,CAAC,CAAC;IACzB;;IAGAb,SAAS,CAAC;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IACtCS,MAAM,CAACG,OAAO,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,QAAQ,GAACL,EAAE,IAAE;IACjBD,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAACH,IAAI,IAAEA,IAAI,CAACH,EAAE,KAAGA,EAAE,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBAEEvB,OAAA,CAACF,UAAU;MACTS,QAAQ,EAAEA,QAAS;MACnBC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBS,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF3B,OAAA,CAACH,QAAQ;MAACiB,KAAK,EAAEA,KAAM;MAACO,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9C,CAAC;AAEP;AAACvB,EAAA,CAnEQD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAqEb,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}