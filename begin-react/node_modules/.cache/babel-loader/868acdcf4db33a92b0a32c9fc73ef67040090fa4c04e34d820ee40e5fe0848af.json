{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\InputSample.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputSample() {\n  _s();\n  const [text, setText] = useState('');\n  const onChange = e => {\n    setText(e.target.value);\n    /* input의 value를 text라고 정의, \r\n    그래서 이벤트가 발생했을 때 input의 value를 text로 set한 것 */\n  };\n  const onReset = () => {\n    setText(''); //text를 초기화한다는 것\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onReset,\n      children: \"\\uCD08\\uAE30\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"\\uAC12: \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(InputSample, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = InputSample;\nfunction InputSample2() {\n  _s2();\n  const [input, setInput] = useState({\n    name: '',\n    nickname: '' //input이라는 객체의 초기값 지정\n  });\n  const {\n    name,\n    nickname\n  } = input; //input 정의(객체)\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target; //추출\n    setInput({\n      ...input,\n      [name]: value\n    }); //객체 수정이므로 \n    //input[name]=value; 이런 식으로 직접 하지 말고 복사\n    //다시 말해 이름에선 input의 name이 value가 되는 거고\n    //닉네임input에선 input의 name이 nickname이므로 nickname\n  };\n  const onReset = () => {\n    setInput({\n      name: '',\n      nickname: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"\\uC774\\uB984\",\n        onChange: onChange,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nickname\",\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        onChange: onChange,\n        value: nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uAC12:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), \" \", name, \" (\", nickname, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s2(InputSample2, \"iBuIPppgF6xH2yO756WkDKJDeWQ=\");\n_c2 = InputSample2;\nexport { InputSample, InputSample2 };\nvar _c, _c2;\n$RefreshReg$(_c, \"InputSample\");\n$RefreshReg$(_c2, \"InputSample2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","InputSample","_s","text","setText","onChange","e","target","value","onReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","InputSample2","_s2","input","setInput","name","nickname","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/InputSample.js"],"sourcesContent":["import React\r\n, { useState } from \"react\";\r\n\r\n function InputSample() {\r\n\r\n    const [text, setText]=useState('');\r\n\r\n    const onChange=(e)=>{\r\n        setText(e.target.value);\r\n    /* input의 value를 text라고 정의, \r\n    그래서 이벤트가 발생했을 때 input의 value를 text로 set한 것 */\r\n    }\r\n\r\n    const onReset=()=>{\r\n        setText(''); //text를 초기화한다는 것\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input onChange={onChange} value={text}/>\r\n\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값: {text}</b>\r\n            {/* 이렇듯 state 및 지역변수(const로 정한) 는\r\n            인자와 다르게 App에서 재료로 소환하지 않는다는 점에서 props와 다름  \r\n            즉 내부에서 사용하려고 있는 것*/}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n }\r\n\r\n function InputSample2(){\r\n\r\n    const [input, setInput] =useState({\r\n        name:'', nickname:'' //input이라는 객체의 초기값 지정\r\n    });\r\n\r\n    const {name, nickname}=input; //input 정의(객체)\r\n\r\n    const onChange=(e)=>{ \r\n    const {value, name} = e.target; //추출\r\n    setInput({...input, [name]:value}) //객체 수정이므로 \r\n    //input[name]=value; 이런 식으로 직접 하지 말고 복사\r\n    //다시 말해 이름에선 input의 name이 value가 되는 거고\r\n    //닉네임input에선 input의 name이 nickname이므로 nickname\r\n    }\r\n\r\n    const onReset=()=>{\r\n        setInput({name:'', nickname:''})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name}/>\r\n            <input name=\"nickname\" placeholder=\"닉네임\" onChange={onChange} value={nickname}/>\r\n            <button onClick={onReset}>초기화</button>\r\n            <div>\r\n                <b>값:</b> {name} ({nickname})\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n }\r\n\r\n export {InputSample, InputSample2};"],"mappings":";;;AAAA,OAAOA,KAAK,IACRC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMS,QAAQ,GAAEC,CAAC,IAAG;IAChBF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3B;AACJ;EACI,CAAC;EAED,MAAMC,OAAO,GAACA,CAAA,KAAI;IACdL,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACjB,CAAC;EAID,oBACIN,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAOO,QAAQ,EAAEA,QAAS;MAACG,KAAK,EAAEL;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEzChB,OAAA;MAAQiB,OAAO,EAAEN,OAAQ;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtChB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,GAAG,UAAG,EAACP,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEb;AAACZ,EAAA,CA9BQD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAgCpB,SAASgB,YAAYA,CAAA,EAAE;EAAAC,GAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAExB,QAAQ,CAAC;IAC9ByB,IAAI,EAAC,EAAE;IAAEC,QAAQ,EAAC,EAAE,CAAC;EACzB,CAAC,CAAC;EAEF,MAAM;IAACD,IAAI;IAAEC;EAAQ,CAAC,GAACH,KAAK,CAAC,CAAC;;EAE9B,MAAMd,QAAQ,GAAEC,CAAC,IAAG;IACpB,MAAM;MAACE,KAAK;MAAEa;IAAI,CAAC,GAAGf,CAAC,CAACC,MAAM,CAAC,CAAC;IAChCa,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,CAACE,IAAI,GAAEb;IAAK,CAAC,CAAC,EAAC;IACnC;IACA;IACA;EACA,CAAC;EAED,MAAMC,OAAO,GAACA,CAAA,KAAI;IACdW,QAAQ,CAAC;MAACC,IAAI,EAAC,EAAE;MAAEC,QAAQ,EAAC;IAAE,CAAC,CAAC;EACpC,CAAC;EAED,oBACIxB,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACAZ,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACE,WAAW,EAAC,cAAI;QAAClB,QAAQ,EAAEA,QAAS;QAACG,KAAK,EAAEa;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtEhB,OAAA;QAAOuB,IAAI,EAAC,UAAU;QAACE,WAAW,EAAC,oBAAK;QAAClB,QAAQ,EAAEA,QAAS;QAACG,KAAK,EAAEc;MAAS;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/EhB,OAAA;QAAQiB,OAAO,EAAEN,OAAQ;QAAAC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtChB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,EAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAACO,IAAI,EAAC,IAAE,EAACC,QAAQ,EAAC,GAChC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEV;AAACI,GAAA,CAhCQD,YAAY;AAAAO,GAAA,GAAZP,YAAY;AAkCrB,SAAQhB,WAAW,EAAEgB,YAAY;AAAE,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}