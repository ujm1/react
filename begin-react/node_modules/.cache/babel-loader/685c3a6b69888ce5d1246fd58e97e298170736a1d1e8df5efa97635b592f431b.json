{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\App2.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useReducer, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport UserList from \"./UserList2\";\nimport CreateUser from \"./CreateUser\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction countActiveUsers(users) {\n  console.log('활성사용자 수를 세는중...');\n  return users.filter(user => user.active) /* active인 user만 다시 */.length; /* 그리고 그 개수를 구함 */\n}\nconst initialState = {\n  /* 초기 상태 설정 */\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: \"velopert\",\n    email: \"public.velopert@gmail.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"tester\",\n    email: \"tester@example.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"liz\",\n    email: \"liz@example.com\",\n    active: false\n  }]\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.name]: action.value\n          /* 새로운 배열(추가한 것 포함) 리턴 */\n        }\n      };\n    case 'CREATE_USER':\n      /* inputs와 users로 이루어진 객체 */\n      return {\n        inputs: initialState.inputs,\n        /* 빈거 */\n        users: state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.id ? {\n          ...user,\n          active: !user.active\n        } : user)\n      };\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\nfunction App2() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  /* 리듀서 사용하기위한 초기설정 */\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.inputs;\n\n  /* 리듀서 사용해 대체 */\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", countActiveUsers]\n  }, void 0, true);\n}\n_s(App2, \"dT3DO/vpR+n1zA7eyJ0wo5o3Jh4=\");\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useCallback","useMemo","useReducer","useRef","useState","UserList","CreateUser","jsxDEV","_jsxDEV","Fragment","_Fragment","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","name","value","concat","map","App2","_s","dispatch","nextId","onChange","e","target","onCreate","current","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/App2.js"],"sourcesContent":["import React, { useCallback, useMemo, useReducer, useRef, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport UserList from \"./UserList2\";\r\nimport CreateUser from \"./CreateUser\";\r\n\r\nfunction countActiveUsers(users) {\r\n  console.log('활성사용자 수를 세는중...');\r\n  return users.filter(user=>user.active) /* active인 user만 다시 */\r\n  .length; /* 그리고 그 개수를 구함 */\r\n}\r\n\r\nconst initialState={ /* 초기 상태 설정 */\r\n  inputs:{\r\n    username:'', email:''\r\n  },\r\n  users: [\r\n    {\r\n      id: 1,\r\n      username: \"velopert\",\r\n      email: \"public.velopert@gmail.com\",\r\n      active:true\r\n    },\r\n    {\r\n      id: 2,\r\n      username: \"tester\",\r\n      email: \"tester@example.com\",\r\n      active:false\r\n    },\r\n    {\r\n      id: 3,\r\n      username: \"liz\",\r\n      email: \"liz@example.com\",\r\n      active:false\r\n    }\r\n  ]\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch(action.type) {\r\n    case 'CHANGE_INPUT' : \r\n    return {\r\n      ...state, inputs: {\r\n        ...state.inputs, \r\n        [action.name] : action.value\r\n        /* 새로운 배열(추가한 것 포함) 리턴 */\r\n      }\r\n    }; \r\n    case 'CREATE_USER' : /* inputs와 users로 이루어진 객체 */\r\n      return {\r\n        inputs: initialState.inputs, /* 빈거 */\r\n        users:state.users.concat(action.user)\r\n      };\r\n    case 'TOGGLE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user=>\r\n          user.id===action.id? { ...user, active: !user.active} : user\r\n        )\r\n      };\r\n\r\n    case 'REMOVE_USER' : \r\n    return {\r\n      ...state,\r\n      users: state.users.filter(user=>user.id!==action.id)\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nfunction App2() {\r\n  const [state, dispatch] =useReducer(reducer, initialState);\r\n  /* 리듀서 사용하기위한 초기설정 */\r\n  const nextId=useRef(4);\r\n\r\n  const {users} = state;\r\n  const {username,email}=state.inputs;\r\n\r\n  /* 리듀서 사용해 대체 */\r\n  const onChange=useCallback(e=>{\r\n    const {name, value} = e.target;\r\n    dispatch({\r\n      type:'CHANGE_INPUT',\r\n      name,\r\n      value\r\n    });\r\n   }, []\r\n  );\r\n\r\n  const onCreate=useCallback(()=>{\r\n    dispatch({\r\n      type:'CREATE_USER',\r\n      user: {\r\n        id: nextId.current,\r\n        username,\r\n        email\r\n      }\r\n    });\r\n    nextId.current+=1;\r\n  }, [username, email]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CreateUser username={username} email={email}\r\n      onChange={onChange}\r\n      onCreate={onCreate}/>\r\n      <UserList users={users} />\r\n      활성사용자 수 : {countActiveUsers}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}