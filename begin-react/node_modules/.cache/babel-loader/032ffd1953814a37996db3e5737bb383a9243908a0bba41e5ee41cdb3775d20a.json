{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\UserList2.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { UserDispatch } from \"./App2\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(function User({\n  user\n}) {\n  _s();\n  const dispatch = useContext(UserDispatch);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          cursor: \"pointer\",\n          color: user.active ? \"green\" : \"black\"\n        },\n        onClick: () => dispatch({\n          type: 'TOGGLE_USER',\n          id: user.id\n        }),\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'REMOVE_USER',\n          id: user.id\n        }),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\")), \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n_c2 = User;\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  /* 이 users는 App.js에서 users로 보낸,\r\n  App.js에서 usersTwo로 준 배열이 되고 */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map((user /* 배열 안 각각의 객체이며, */) => /*#__PURE__*/_jsxDEV(User, {\n      user: user /* 이건 위에서의 User user */\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c3 = UserList;\nexport default _c4 = /*#__PURE__*/React.memo(UserList);\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"User$React.memo\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"UserList\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["React","useContext","UserDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","memo","_c","user","dispatch","children","style","cursor","color","active","onClick","type","id","username","fileName","_jsxFileName","lineNumber","columnNumber","email","_c2","UserList","users","onRemove","onToggle","map","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/UserList2.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { UserDispatch } from \"./App2\";\r\n\r\nconst User=React.memo(\r\n    function User({ user}) {\r\n\r\n    const dispatch=useContext(UserDispatch); \r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <b\r\n          style={{\r\n            cursor: \"pointer\",\r\n            color: user.active ? \"green\" : \"black\",\r\n          }}\r\n          onClick={() => dispatch({type:'TOGGLE_USER', id: user.id})}\r\n        >\r\n          {user.username}\r\n        </b>\r\n        <span>({user.email})</span>\r\n        <button onClick={() => dispatch({type:'REMOVE_USER', id:user.id})\r\n      }>삭제</button>\r\n        {/* 등록과 달리 유저 하나하나마다 삭제버튼 부여해야 하므로 유저리스트에 추가한다. */}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nfunction UserList({ users, onRemove, onToggle }) {\r\n  /* 이 users는 App.js에서 users로 보낸,\r\nApp.js에서 usersTwo로 준 배열이 되고 */\r\n\r\n  return (\r\n    <>\r\n      {users.map((user /* 배열 안 각각의 객체이며, */) => (\r\n        <User\r\n          user={user} /* 이건 위에서의 User user */\r\n          key={user.id}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(UserList);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,IAAI,gBAAAC,EAAA,eAACR,KAAK,CAACS,IAAI,CAAAC,EAAA,GAAAF,EAAA,CACjB,SAASD,IAAIA,CAAC;EAAEI;AAAI,CAAC,EAAE;EAAAH,EAAA;EAEvB,MAAMI,QAAQ,GAACX,UAAU,CAACC,YAAY,CAAC;EAEzC,oBACEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAAS,QAAA,gBACET,OAAA;QACEU,KAAK,EAAE;UACLC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAEL,IAAI,CAACM,MAAM,GAAG,OAAO,GAAG;QACjC,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;UAACO,IAAI,EAAC,aAAa;UAAEC,EAAE,EAAET,IAAI,CAACS;QAAE,CAAC,CAAE;QAAAP,QAAA,EAE1DF,IAAI,CAACU;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACJrB,OAAA;QAAAS,QAAA,GAAM,GAAC,EAACF,IAAI,CAACe,KAAK,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3BrB,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;UAACO,IAAI,EAAC,aAAa;UAAEC,EAAE,EAACT,IAAI,CAACS;QAAE,CAAC,CACjE;QAAAP,QAAA,EAAC;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER;EAAC,gBACN,CAAC;AAEP,CAAC,kCAAC;AAACE,GAAA,GAxBGpB,IAAI;AA0BV,SAASqB,QAAQA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAC/C;AACF;;EAEE,oBACE3B,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACGgB,KAAK,CAACG,GAAG,CAAC,CAACrB,IAAI,CAAC,sCACfP,OAAA,CAACG,IAAI;MACHI,IAAI,EAAEA,IAAK,CAAC;IAAA,GACPA,IAAI,CAACS,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACF;EAAC,gBACF,CAAC;AAEP;AAACQ,GAAA,GAdQL,QAAQ;AAgBjB,eAAAM,GAAA,gBAAelC,KAAK,CAACS,IAAI,CAACmB,QAAQ,CAAC;AAAC,IAAAlB,EAAA,EAAAiB,GAAA,EAAAM,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}