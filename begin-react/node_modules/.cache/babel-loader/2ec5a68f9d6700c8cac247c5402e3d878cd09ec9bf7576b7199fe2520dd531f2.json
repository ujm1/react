{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ude\\\\begin-react\\\\src\\\\UserList2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction User({\n  user,\n  onRemove,\n  onToggle\n}) {\n  _s();\n  useEffect(() => {\n    /* 마운트 시 한번만 실행할 코드 */\n    console.log(\"user값 설정\"); /* 첫번째 파라미터는 함수 */\n    console.log(user);\n\n    /* 정리함수는 선택사항 */\n\n    return () => {\n      console.log(\"user가 바뀌기 전\");\n      console.log(user);\n    };\n  }, [user] /* 두번쨰 파라미터는 배열 : 비우면 컴포넌트가 처음 나타날 때만 함수 호출 */);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          cursor: \"pointer\",\n          color: user.active ? \"green\" : \"black\"\n        },\n        onClick: () => onToggle(user.id),\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(user.id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(User, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = User;\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  /* 이 users는 App.js에서 users로 보낸,\r\n  App.js에서 usersTwo로 준 배열이 되고 */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map((user /* 배열 안 각각의 객체이며, */) => /*#__PURE__*/_jsxDEV(User, {\n      user: user /* 이건 위에서의 User user */,\n\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c2 = UserList;\nexport default UserList;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","User","user","onRemove","onToggle","_s","console","log","children","style","cursor","color","active","onClick","id","username","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","UserList","users","map","_c2","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ude/begin-react/src/UserList2.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction User({ user, onRemove, onToggle }) {\r\n  useEffect(() => { /* 마운트 시 한번만 실행할 코드 */\r\n    console.log(\"user값 설정\"); /* 첫번째 파라미터는 함수 */\r\n    console.log(user);\r\n\r\n    /* 정리함수는 선택사항 */\r\n\r\n    return () => {  \r\n      console.log(\"user가 바뀌기 전\");\r\n      console.log(user);\r\n    };\r\n  }, [user] /* 두번쨰 파라미터는 배열 : 비우면 컴포넌트가 처음 나타날 때만 함수 호출 */\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <b\r\n          style={{\r\n            cursor: \"pointer\",\r\n            color: user.active ? \"green\" : \"black\",\r\n          }}\r\n          onClick={() => onToggle(user.id)}\r\n        >\r\n          {user.username}\r\n        </b>\r\n        <span>({user.email})</span>\r\n        <button onClick={() => onRemove(user.id)}>삭제</button>\r\n        {/* 등록과 달리 유저 하나하나마다 삭제버튼 부여해야 하므로 유저리스트에 추가한다. */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction UserList({ users, onRemove, onToggle }) {\r\n  /* 이 users는 App.js에서 users로 보낸,\r\nApp.js에서 usersTwo로 준 배열이 되고 */\r\n\r\n  return (\r\n    <>\r\n      {users.map((user /* 배열 안 각각의 객체이며, */) => (\r\n        <User\r\n          user={user} /* 이건 위에서의 User user */\r\n          key={user.id}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1CT,SAAS,CAAC,MAAM;IAAE;IAChBU,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;;IAEjB;;IAEA,OAAO,MAAM;MACXI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BD,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC,8CACR,CAAC;EAEH,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QACEW,KAAK,EAAE;UACLC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAET,IAAI,CAACU,MAAM,GAAG,OAAO,GAAG;QACjC,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACF,IAAI,CAACY,EAAE,CAAE;QAAAN,QAAA,EAEhCN,IAAI,CAACa;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACJrB,OAAA;QAAAU,QAAA,GAAM,GAAC,EAACN,IAAI,CAACkB,KAAK,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3BrB,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACD,IAAI,CAACY,EAAE,CAAE;QAAAN,QAAA,EAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElD;EAAC,gBACN,CAAC;AAEP;AAACd,EAAA,CAhCQJ,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAkCb,SAASqB,QAAQA,CAAC;EAAEC,KAAK;EAAEpB,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAC/C;AACF;;EAEE,oBACEN,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACGe,KAAK,CAACC,GAAG,CAAC,CAACtB,IAAI,CAAC,sCACfJ,OAAA,CAACG,IAAI;MACHC,IAAI,EAAEA,IAAK,CAAC;;MAEZC,QAAQ,EAAEA,QAAS;MACnBC,QAAQ,EAAEA;IAAS,GAFdF,IAAI,CAACY,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACF;EAAC,gBACF,CAAC;AAEP;AAACM,GAAA,GAhBQH,QAAQ;AAkBjB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}